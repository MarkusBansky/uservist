buildscript {
    dependencies {
        classpath 'org.postgresql:postgresql:42.1.3'
    }
}

plugins {
    id 'java'
    id 'org.liquibase.gradle' version '2.0.2'
    id "org.springframework.boot" version "2.2.4.RELEASE"
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
}

apply plugin: 'org.liquibase.gradle'

group 'com.markiian.benovskyi'
version '0.0.1'

sourceCompatibility = 11

repositories {
    mavenCentral()
    mavenLocal()
    maven { url 'https://repo.spring.io/milestone' }
}


dependencies {
    // Spring packages
    implementation 'org.springframework.boot:spring-boot-configuration-processor:2.2.4.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.data:spring-data-jpa'

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.10.2'

    // Postgres Database
    runtimeOnly 'org.postgresql:postgresql'
    liquibaseRuntime 'org.liquibase:liquibase-core:3.5.5'
    liquibaseRuntime 'org.postgresql:postgresql'

    // Testing
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    // The auth api
    implementation 'com.markiian.benovskyi.auth:auth-api:0.0.1'
}

test {
    useJUnitPlatform()
}

liquibase {
    activities {
        main {}
    }
}

task migrations {
    doLast {
        println "Applying postgresql migrations"
        liquibase {
            activities {
                main {
                    changeLogFile "src/main/resources/db/master-migrations.xml"
                    url "jdbc:postgresql://localhost:5555/universal_user_db"
                    username "dev_docker_user"
                    password "dev_docker_password"
                    defaultSchemaName "users"
                    liquibaseSchemaName "users_lb"
                }
            }
        }
    }
}

// Make this project to depend on auth api publication and swagger UI
//compileJava.dependsOn(':auth-api:openApiGenerate')
compileJava.dependsOn(':auth-api:publishToMavenLocal')
compileJava.dependsOn(':auth-api-ui:generateSwaggerUI')