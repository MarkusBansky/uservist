plugins {
    id 'java'
    id 'org.openapi.generator' version '4.2.0'
    id 'io.spring.dependency-management' version '1.0.6.RELEASE'
    id 'net.researchgate.release' version '2.6.0'
}

group groupName
version '0.0.1'

repositories {
    mavenCentral()
}

dependencies {
    compileClasspath("org.openapitools:openapi-generator-gradle-plugin:4.2.0")

    implementation("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    implementation("io.swagger.core.v3:swagger-core:${swaggerVersion}")
    implementation("org.openapitools:jackson-databind-nullable:0.1.0")
}

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$projectDir/src/main/resources/auth-api-v0.0.1.yaml".toString()
    outputDir = "$buildDir/generated".toString()

    apiPackage = "${groupName}.api"
    modelPackage = "${groupName}.model"

    configOptions = [
            dateLibrary: "java8",
            interfaceOnly: true
    ]
}

compileJava.dependsOn tasks.openApiGenerate

sourceSets.main.java.srcDir file("$buildDir/generated/src/main/java".toString())

// Publish to maven localâ€¨
task sourceJar(type: Jar, dependsOn: classes) {
    // Generates the sources jar to be imported by eclipse
    // automatically when clicking in the autogenerated classes :)
    classifier "sources"
    from sourceSets.main.allJava
}

apply plugin: "maven-publish"

publishing {
    publications {
        maven(MavenPublication) {
            artifact(sourceJar) { // calls the task above
                artifactId "api"
                groupId maven_group
                extension "jar"
                classifier "sources"
            }
            artifactId "api"
            groupId maven_group
            from components.java
        }
    }

    repositories {
        mavenLocal()
    }
}